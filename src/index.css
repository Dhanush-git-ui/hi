@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Reddish-black neon theme for Indian Monopoly */
    --background: 0 0% 5%;
    --foreground: 0 0% 98%;

    --card: 0 0% 8%;
    --card-foreground: 0 0% 95%;

    --popover: 0 0% 8%;
    --popover-foreground: 0 0% 95%;

    --primary: 0 85% 60%;
    --primary-foreground: 0 0% 98%;

    --secondary: 0 15% 12%;
    --secondary-foreground: 0 0% 95%;

    --muted: 0 10% 15%;
    --muted-foreground: 0 0% 65%;

    --accent: 15 100% 55%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 85% 60%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 20% 20%;
    --input: 0 20% 18%;
    --ring: 0 85% 60%;

    --radius: 0.75rem;

    /* Game-specific colors */
    --neon-red: 0 100% 50%;
    --neon-orange: 15 100% 55%;
    --neon-gold: 45 100% 50%;
    --game-board: 0 0% 3%;
    --tile-bg: 0 0% 12%;
    --tile-border: 0 85% 60%;
    --property-tier1: 220 85% 55%;
    --property-tier2: 280 85% 55%;
    --property-tier3: 120 85% 55%;
    --special-tile: 45 100% 50%;
    
    /* Shadows and glows */
    --shadow-neon: 0 0 20px hsl(var(--neon-red) / 0.5);
    --shadow-gold: 0 0 15px hsl(var(--neon-gold) / 0.4);
    --glow-red: 0 0 30px hsl(var(--neon-red) / 0.6);
    --glow-subtle: 0 0 10px hsl(var(--accent) / 0.3);

    --sidebar-background: 0 0% 8%;
    --sidebar-foreground: 0 0% 95%;
    --sidebar-primary: 0 85% 60%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 0 15% 12%;
    --sidebar-accent-foreground: 0 0% 95%;
    --sidebar-border: 0 20% 20%;
    --sidebar-ring: 0 85% 60%;
  }

  .dark {
    /* Keep same theme for dark mode consistency */
    --background: 0 0% 5%;
    --foreground: 0 0% 98%;
    --card: 0 0% 8%;
    --card-foreground: 0 0% 95%;
    --popover: 0 0% 8%;
    --popover-foreground: 0 0% 95%;
    --primary: 0 85% 60%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 15% 12%;
    --secondary-foreground: 0 0% 95%;
    --muted: 0 10% 15%;
    --muted-foreground: 0 0% 65%;
    --accent: 15 100% 55%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 85% 60%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 20% 20%;
    --input: 0 20% 18%;
    --ring: 0 85% 60%;
    --sidebar-background: 0 0% 8%;
    --sidebar-foreground: 0 0% 95%;
    --sidebar-primary: 0 85% 60%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 0 15% 12%;
    --sidebar-accent-foreground: 0 0% 95%;
    --sidebar-border: 0 20% 20%;
    --sidebar-ring: 0 85% 60%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground overflow-hidden;
  }
}

@layer components {
  .neon-glow {
    box-shadow: var(--glow-red);
  }
  
  .neon-border {
    border: 1px solid hsl(var(--neon-red));
    box-shadow: 0 0 10px hsl(var(--neon-red) / 0.3);
  }
  
  .tile-glow {
    transition: all 0.3s ease;
  }
  
  .tile-glow:hover {
    box-shadow: var(--glow-subtle);
    transform: translateY(-2px);
  }
  
  .dice-animation {
    animation: dice-roll 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  
  .player-token {
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .game-board {
    background: 
      radial-gradient(circle at 50% 50%, hsl(var(--neon-red) / 0.1) 0%, transparent 50%),
      linear-gradient(45deg, hsl(var(--game-board)) 0%, hsl(var(--background)) 100%);
  }
}

@layer utilities {
  .text-neon {
    color: hsl(var(--neon-red));
    text-shadow: 0 0 10px hsl(var(--neon-red) / 0.5);
  }
  
  .text-gold {
    color: hsl(var(--neon-gold));
    text-shadow: 0 0 8px hsl(var(--neon-gold) / 0.4);
  }
  
  .bg-glass {
    background: hsl(var(--card) / 0.7);
    backdrop-filter: blur(10px);
    border: 1px solid hsl(var(--border) / 0.3);
  }
}

@keyframes dice-roll {
  0% { transform: rotateX(0deg) rotateY(0deg); }
  25% { transform: rotateX(90deg) rotateY(90deg); }
  50% { transform: rotateX(180deg) rotateY(180deg); }
  75% { transform: rotateX(270deg) rotateY(270deg); }
  100% { transform: rotateX(360deg) rotateY(360deg); }
}